@startuml classes
set namespaceSeparator none
class "BioGasPlant" as ad_meal_prep_control.visualization.BioGasPlant {
  max_volume : float
  draw(v_max, v_ch4, v_co2, v_h2o, u_actual)
}
class "CHP" as ad_meal_prep_control.utils.CHP {
  R_S : float
  lhv : float
  max_power : float
  thermal_efficiency : float
  ch4_vol_flow_rate(load: np.ndarray, press: float, temp: float)
}
class "Data" as ad_meal_prep_control.visualization.Data {
  draw(x: np.ndarray, state_names: list, y: np.ndarray, meas_names: list)
}
class "Disturbances" as ad_meal_prep_control.utils.Disturbances {
  clogged_feeding : Optional[dict[int, tuple[int, int]]]
  feed_computation_stuck : Optional[tuple[int, int]]
  max_feeding_error : Optional[tuple[float]]
  state_jumps : Optional[dict[int, tuple[int, float]]]
}
class "GasConditions" as ad_meal_prep_control.models.gas_storage.GasConditions {
  T : float
  T_norm : float
  p0 : float
  p_ch4_phase_change : float
  p_co2_phase_change : float
  p_gas_storage : float
  p_h2o : float
  p_norm : float
}
class "Scenario" as ad_meal_prep_control.scenario.Scenario {
  Tu : ndarray
  Tx : ndarray
  Ty : ndarray
  compile_nlp : bool
  disturbances
  model : Model
  mpc : bool
  mpc_live_vis : bool
  n_days_mpc : int
  n_days_steady_state : int
  n_horizon : int
  n_robust : int
  name : str
  num_std_devs : float
  plot_vars : list[str]
  pygame_vis : bool
  steady_state_sim : bool
  store_results : bool
  sub_names : list[str]
  t_step : float
  u_max : dict[str, float]
  uncertainty : bool
  vol_flow_rate : Optional[Union[np.ndarray, None]]
  x0 : ndarray
  x0_norm
  model_setup()
  pygame_setup()
  run()
  run_mpc()
  run_steady_state_sim()
  setup()
  substrate_setup()
}
class "StateEstimator" as ad_meal_prep_control.state_estimator.StateEstimator {
  estimate_x(y)
}
class "Substrate" as ad_meal_prep_control.substrates.Substrate {
  nominal_values : ndarray
  state : str
  std_devs
  variation_coefficients : ndarray
  xi : list
  create_similar_substrate() -> Substrate
  get_uncertain_xi_ch_pr_li()
}
ad_meal_prep_control.utils.Disturbances --* ad_meal_prep_control.scenario.Scenario : disturbances
ad_meal_prep_control.visualization.BioGasPlant --* ad_meal_prep_control.scenario.Scenario : _bga
ad_meal_prep_control.visualization.Data --* ad_meal_prep_control.scenario.Scenario : _data
@enduml
